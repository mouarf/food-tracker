{"version":3,"sources":["serviceWorkerRegistration.ts","model/Satiety.ts","features/counter/counterSlice.ts","model/Meal.ts","repositories/MealRepository/MealDatabaseAdapter.ts","repositories/MealRepository/MealRepository.ts","repositories/ConnectionFactory.ts","repositories/MealRepository/MealDatabaseSchema.ts","repositories/MealRepository/index.ts","features/mealForm/mealSlice.ts","features/navMenu/navMenuSlice.ts","features/home/homeSlice.ts","app/store.ts","features/navMenu/NavMenu.tsx","Layout.tsx","features/home/components/MealRow/components/MealDateTime/index.ts","features/home/components/MealRow/components/MealDateTime/MealDateTime.tsx","features/home/components/MealRow/components/MealWeight/MealWeight.tsx","features/home/components/MealRow/components/HungerNote/index.ts","features/home/components/MealRow/components/HungerNote/HungerNote.tsx","features/home/components/MealRow/components/SatietyLabel/Satiety.tsx","features/home/components/MealRow/MealRow.tsx","features/home/components/DeleteButton/DeleteMealsButton.tsx","features/home/components/DeleteButton/index.ts","features/mealForm/components/MealDateField/MealDateField.tsx","features/mealForm/components/MealDateField/index.ts","features/mealForm/components/MealTimeField/MealTimeField.tsx","features/mealForm/components/MealTimeField/index.ts","features/mealForm/components/HungerNoteSlider/HungerNoteSlider.tsx","features/mealForm/components/HungerNoteSlider/index.ts","features/mealForm/components/SatietySelect/SatietySelect.tsx","features/mealForm/components/SatietySelect/index.ts","features/mealForm/components/MealWeightComponent/MealWeightField/MealWeightValidator.ts","features/mealForm/components/MealWeightComponent/MealWeightField/MealWeightField.tsx","features/mealForm/components/MealWeightComponent/MealWeightField/index.ts","features/mealForm/components/MealWeightComponent/MealWeightComponent.tsx","features/mealForm/components/MealWeightComponent/index.ts","features/mealForm/components/SaveMealButton/SaveMealButton.tsx","features/mealForm/components/SaveMealButton/index.ts","features/mealForm/components/TotalWeight/TotalWeight.tsx","features/mealForm/components/TotalWeight/index.ts","features/mealForm/MealFormValidator.ts","features/mealForm/MealForm.tsx","index.tsx","features/home/Home.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Satiety","counterSlice","createSlice","name","initialState","value","reducers","increment","decrement","incrementByAmount","action","payload","actions","Meal","id","date","weightValues","hungerNote","satiety","_id","_date","_weight","_hungerNote","_satiety","this","Date","filterNullValues","JSON","stringify","reduce","w1","w2","filteredWeightValues","filter","length","weight","serializedMeal","deserialized","parse","MealDatabaseAdapter","meal","_meal","toISOString","join","FromValues","split","map","Number","MealRepository","connection","_connection","nbOfMeals","select","from","MealDatabaseName","order","by","type","limit","mealDbObject","dbObject","adapter","undefined","insert","update","numberOfLineAffected","mealIds","remove","where","in","numberOfDeletedLines","into","values","set","_instance","Connection","Worker","initDb","tables","columns","primaryKey","autoIncrement","notNull","dataType","now","fine","mealSlice","updateMealDate","dateInState","newDate","setHours","getHours","setMinutes","getMinutes","updateMealTime","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","updateMealWeight","index","newValue","addMealWeight","push","removeMealWeight","pop","updateSatiety","updateHungerNote","clearState","addMealFormSelector","mealForm","mealFormReducer","reducer","navMenuSlice","drawerIsOpen","openDrawer","closeDrawer","navMenuSelector","navMenu","navMenuReducer","homeSlice","lastMeals","selectedMealIds","addSelectedMealId","removeSelectedMealId","lastMealsLoaded","homeSelector","home","homeReducer","store","configureStore","counter","counterReducer","useStyles","makeStyles","theme","createStyles","drawer","width","drawerPaper","List","ListItem","component","NavLink","to","ListItemIcon","ListItemText","primary","NavMenu","navMenuState","useSelector","dispatch","useDispatch","classes","Hidden","smUp","Drawer","variant","anchor","open","onClick","className","paper","Toolbar","Typography","xsDown","root","display","appBar","zIndex","content","padding","spacing","Layout","props","AppBar","IconButton","edge","color","aria-label","children","Container","MealDateTime","formatNumber","toString","padStart","formattedDate","formattedTime","MealWeight","HungerNote","note","SatietyLabel","labels","ateToMuch","stillHungry","MealRow","isSelected","TableRow","selected","TableCell","align","useStyle","buttonContainer","justifyContent","button","marginTop","DeleteMealsButton","Button","disabled","a","getInstance","repository","deleteMeals","deleteMealsAsync","datePicker","marginBottom","MealDateField","utils","DateFnsUtils","onChange","format","label","invalidDateMessage","MealTimeField","time","ampm","slider","HungerNoteSlider","marks","Array","keys","key","Slider","min","max","step","onChangeCommitted","event","element","SatietySelect","FormControl","InputLabel","Select","labelId","feeling","target","MenuItem","MealWeightValidator","isNaN","inputField","MealWeightField","useState","setError","errorMessage","setErrorMessage","localWeight","setLocalWeight","useEffect","updateLocalWeight","TextField","helperText","validate","isValid","InputProps","endAdornment","InputAdornment","position","autoFocus","buttonSection","MealWeightComponent","Fragment","SaveMealButton","getState","mealState","mealToSave","mealRepository","saveMeal","totalWeight","TotalWeight","MealFormValidator","container","ReactDOM","render","path","exact","numberOfMealToLoad","getLastMeals","homeState","TableContainer","Table","TableHead","TableBody","includes","mealIsValid","setMealIsValid","isMealValid","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.26dc9a01.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum Satiety {\r\n    stillHungry,\r\n    fine,\r\n    ateToMuch\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import {Satiety} from \"./Satiety\";\r\n\r\nexport default class Meal {\r\n    private readonly _id: number | undefined;\r\n    private readonly _date: Date;\r\n    private readonly _weight: number[];\r\n    private readonly _hungerNote: number;\r\n    private readonly _satiety: Satiety;\r\n    \r\n    private constructor(id: number | undefined, date: Date, weightValues: number[], hungerNote: number, satiety: Satiety) {\r\n        this._id = id;\r\n        this._hungerNote = hungerNote;\r\n        this._satiety = satiety;\r\n        this._date = new Date(date);\r\n        this._weight = Meal.filterNullValues(weightValues)\r\n    }\r\n    \r\n    private static filterNullValues(weightValues: number[]): number[] {\r\n        const filteredWeightValues = weightValues.filter(value => value > 0);\r\n        return filteredWeightValues.length > 0\r\n            ? filteredWeightValues\r\n            : [0];\r\n    }\r\n    \r\n    public get id(): number | undefined {\r\n        return this._id;\r\n    }\r\n\r\n    public get date(): Date {\r\n        return this._date;\r\n    }\r\n\r\n    public get weight(): number[] {\r\n        return this._weight;\r\n    }\r\n\r\n    public get hungerNote(): number {\r\n        return this._hungerNote;\r\n    }\r\n\r\n    public get satiety(): Satiety {\r\n        return this._satiety;\r\n    }\r\n    \r\n    public get totalWeight() {\r\n        return this._weight.reduce((w1, w2) => w1 + w2);\r\n    }\r\n    \r\n    public toString(): string {\r\n        return JSON.stringify(this);\r\n    }\r\n    \r\n    static FromValues(id: number | undefined, date: string, weight: number[], hungerNote: number, satiety: Satiety): Meal {\r\n        return new Meal(\r\n            id,\r\n            new Date(date),\r\n            weight,\r\n            hungerNote,\r\n            satiety\r\n        );\r\n    }\r\n    \r\n    static parse(serializedMeal: string): Meal {\r\n        const deserialized = JSON.parse(serializedMeal);\r\n        return new Meal(\r\n            deserialized._id,\r\n            new Date(deserialized._date),\r\n            deserialized._weight,\r\n            deserialized._hungerNote,\r\n            deserialized._satiety\r\n        )\r\n    }\r\n}","import Meal from \"../../model/Meal\";\r\n\r\nexport default  class MealDatabaseAdapter {\r\n    private readonly _meal: Meal | undefined;\r\n    \r\n    readonly id: number | undefined;\r\n    readonly date: string | undefined;\r\n    readonly weight: string | undefined;\r\n    readonly hungerNote: number | undefined;\r\n    readonly satiety: number | undefined;\r\n    \r\n    constructor(meal: any) {\r\n        if (meal instanceof Meal) {\r\n            this.id = meal.id;\r\n            this.date = meal.date.toISOString();\r\n            this.weight = meal.weight.join(';');\r\n            this.hungerNote = meal.hungerNote;\r\n            this.satiety = meal.satiety;\r\n        }\r\n        else\r\n            this._meal = Meal.FromValues(\r\n                meal.id,\r\n                meal.date,\r\n                meal.weight.split(';').map((weight: string) => Number(weight)),\r\n                meal.hungerNote,\r\n                meal.satiety\r\n            );\r\n    }\r\n    \r\n    public get Meal(): Meal | undefined {\r\n        return this._meal;\r\n    }\r\n}","import {Connection} from \"jsstore\";\r\nimport Meal from \"../../model/Meal\";\r\nimport getDbSchema from \"./MealDatabaseSchema\";\r\nimport MealDatabaseAdapter from \"./MealDatabaseAdapter\";\r\nimport GetConnection from \"../ConnectionFactory\";\r\n\r\nexport default class MealRepository {\r\n    private static _instance: MealRepository | undefined;\r\n    private static readonly MealDatabaseName = \"Meals\";\r\n    private _connection: Connection;\r\n    \r\n    private constructor(connection: Connection) {\r\n        this._connection = connection;\r\n    }\r\n    \r\n    public async getLastMeals(nbOfMeals: number): Promise<Meal[]> {\r\n        const mealDbObject = await this._connection.select({\r\n            from: MealRepository.MealDatabaseName,\r\n            order: {\r\n                by: \"date\",\r\n                type: \"desc\"\r\n            },\r\n            limit: nbOfMeals\r\n        });\r\n        \r\n        return mealDbObject\r\n            .map((dbObject) => new MealDatabaseAdapter(dbObject).Meal as Meal)\r\n    }\r\n    \r\n    public async saveMeal(meal: Meal): Promise<boolean> {\r\n        const adapter = new MealDatabaseAdapter(meal);\r\n        const numberOfLineAffected: number | unknown = meal.id === undefined\r\n            ? await this.insert(adapter)\r\n            : await this.update(adapter)\r\n        \r\n        return typeof numberOfLineAffected === \"number\" && numberOfLineAffected > 0;\r\n    }\r\n    \r\n    public async deleteMeals(mealIds: number[]): Promise<boolean> {\r\n        const numberOfDeletedLines = await this._connection.remove({\r\n            from: MealRepository.MealDatabaseName,\r\n            where: {\r\n                id: {\r\n                    in: mealIds\r\n                }\r\n            }\r\n        });\r\n        \r\n        return numberOfDeletedLines > 0;\r\n    }\r\n\r\n    private async insert(adapter: MealDatabaseAdapter): Promise<number | unknown> {\r\n        return await this._connection.insert({\r\n            into: MealRepository.MealDatabaseName,\r\n            values: [adapter]\r\n        });\r\n    }\r\n    \r\n    private async update(adapter: MealDatabaseAdapter): Promise<number | unknown> {\r\n        return await this._connection.update({\r\n            in: MealRepository.MealDatabaseName,\r\n            where: {\r\n                id: adapter.id\r\n            },\r\n            set: {\r\n                date:  adapter.date,\r\n                weight:  adapter.weight,\r\n                hungerNote : adapter.hungerNote,\r\n                satiety : adapter.satiety\r\n            }\r\n        });\r\n    }\r\n\r\n    public static async getInstance() {\r\n        if (this._instance === undefined) {\r\n            const connection = GetConnection();\r\n            await connection.initDb(getDbSchema(this.MealDatabaseName));\r\n            this._instance = new MealRepository(connection);\r\n        }\r\n        \r\n        return this._instance;\r\n    }\r\n}\r\n\r\n","import {Connection} from \"jsstore\";\r\n\r\nexport default function GetConnection() {\r\n    return new Connection(new Worker(\"jsstore.worker.js\"));\r\n}","export default function getDbSchema(mealDatabaseName: string) {\r\n    const mealSchema = {\r\n        name: mealDatabaseName,\r\n        columns: {\r\n            id: { primaryKey: true, autoIncrement: true },\r\n            date:  { notNull: true, dataType: \"string\" },\r\n            weight:  { notNull: true, dataType: \"string\" },\r\n            hungerNote : { notNull: true, dataType: \"number\" },\r\n            satiety : { notNull: true, dataType: \"number\" }\r\n        }\r\n    }\r\n\r\n    return {\r\n        name: \"mealDatabase\",\r\n        tables: [mealSchema]\r\n    };\r\n}","import MealRepository from \"./MealRepository\";\r\n\r\nexport default MealRepository;","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\nimport {Satiety} from \"../../model/Satiety\";\r\nimport {AppThunk, RootState} from \"../../app/store\";\r\nimport Meal from \"../../model/Meal\";\r\nimport MealRepository from \"../../repositories/MealRepository\";\r\n\r\nexport interface MealFormState {\r\n    id: number | undefined;\r\n    date: string;\r\n    weight: number[];\r\n    hungerNote: number;\r\n    satiety: Satiety;\r\n}\r\n\r\nconst initialState: MealFormState = {\r\n    id: undefined,\r\n    date: new Date(Date.now()).toISOString(),\r\n    weight: [0],\r\n    hungerNote: 0,\r\n    satiety: Satiety.fine\r\n};\r\n\r\nexport const mealSlice = createSlice({\r\n    name: \"mealForm\",\r\n    initialState,\r\n    reducers: {\r\n        updateMealDate: (state, action: PayloadAction<string>) => {\r\n            const dateInState = new Date(state.date);\r\n            const newDate = new Date(action.payload);\r\n\r\n            newDate.setHours(dateInState.getHours());\r\n            newDate.setMinutes(dateInState.getMinutes());\r\n            \r\n            state.date = newDate.toISOString()\r\n        },\r\n        updateMealTime: (state, action: PayloadAction<string>) => {\r\n            const dateInState = new Date(state.date);\r\n            const newDate = new Date(action.payload);\r\n            \r\n            newDate.setFullYear(dateInState.getFullYear());\r\n            newDate.setMonth(dateInState.getMonth());\r\n            newDate.setDate(dateInState.getDate());\r\n            \r\n            state.date = newDate.toISOString()\r\n        },\r\n        updateMealWeight: (state, action: PayloadAction<{ newValue: number, index: number }>) => {\r\n            state.weight[action.payload.index] = action.payload.newValue\r\n        },\r\n        addMealWeight: state => {\r\n            state.weight.push(0);\r\n        },\r\n        removeMealWeight: state => {\r\n            state.weight.pop();\r\n        },\r\n        updateSatiety: (state, action: PayloadAction<Satiety>) => {\r\n            state.satiety = action.payload;\r\n        },\r\n        updateHungerNote: (state, action: PayloadAction<number>) => {\r\n            state.hungerNote = action.payload;\r\n        },\r\n        clearState: state => initialState\r\n    }\r\n})\r\n\r\nexport const { updateHungerNote, updateSatiety, updateMealWeight, addMealWeight, removeMealWeight} = mealSlice.actions\r\n\r\nexport const updateMealDate = (date: Date) =>\r\n    mealSlice.actions.updateMealDate(date.toISOString());\r\n\r\nexport const updateMealTime = (date: Date) =>\r\n    mealSlice.actions.updateMealTime(date.toISOString());\r\n\r\nexport const saveMealAsync = (): AppThunk => async (dispatch, getState) => {\r\n    const mealState = getState().mealForm;\r\n    const mealToSave = Meal.FromValues(mealState.id, mealState.date, mealState.weight, mealState.hungerNote, mealState.satiety);\r\n    const mealRepository = await MealRepository.getInstance()\r\n    const success = await mealRepository.saveMeal(mealToSave);\r\n\r\n    if (success)\r\n        dispatch(mealSlice.actions.clearState());\r\n};\r\n\r\nexport const addMealFormSelector = (state: RootState) => state.mealForm;\r\n\r\nconst mealFormReducer = mealSlice.reducer;\r\nexport default mealFormReducer;","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {RootState} from \"../../app/store\";\r\n\r\ninterface NavMenuState {\r\n    drawerIsOpen: boolean;\r\n}\r\n\r\nconst initialState : NavMenuState = {\r\n    drawerIsOpen: false,\r\n}\r\n\r\nexport const navMenuSlice = createSlice({\r\n        name: \"navMenu\",\r\n        initialState,\r\n        reducers: {\r\n            openDrawer: state => {\r\n                state.drawerIsOpen = true;\r\n            },\r\n            closeDrawer: state => {\r\n                state.drawerIsOpen = false;\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\nexport const { openDrawer, closeDrawer } = navMenuSlice.actions;\r\n\r\nexport const navMenuSelector = (state: RootState) => state.navMenu; \r\n    \r\nconst navMenuReducer = navMenuSlice.reducer;\r\n\r\nexport default navMenuReducer;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {AppThunk, RootState} from \"../../app/store\";\r\nimport MealRepository from \"../../repositories/MealRepository\";\r\n\r\nexport interface HomeState {\r\n    lastMeals: string[];\r\n    selectedMealIds: number[]\r\n}\r\n\r\nconst initialState: HomeState = {\r\n    lastMeals: [],\r\n    selectedMealIds: []\r\n}\r\n\r\nconst homeSlice = createSlice({\r\n    name: \"home\",\r\n    initialState,\r\n    reducers: {\r\n        addSelectedMealId: (state, action: PayloadAction<number>) => {\r\n            state.selectedMealIds = [...state.selectedMealIds, action.payload]\r\n        },\r\n        removeSelectedMealId: (state, action: PayloadAction<number>) => {\r\n            state.selectedMealIds = state.selectedMealIds.filter(id => id !== action.payload);\r\n        },\r\n        lastMealsLoaded: (state, action: PayloadAction<string[]>) => {\r\n            state.lastMeals = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const loadLastMeals = (numberOfMealToLoad: number): AppThunk => async dispatch => {\r\n    const repository = await MealRepository.getInstance();\r\n    const lastMeals = await repository.getLastMeals(numberOfMealToLoad);\r\n    dispatch(homeSlice.actions.lastMealsLoaded(lastMeals.map(meal => meal.toString())));\r\n}\r\n\r\nexport const deleteMealsAsync = (mealIds: number[]): AppThunk => async dispatch => {\r\n    const repository = await MealRepository.getInstance();\r\n    const success = await  repository.deleteMeals(mealIds);\r\n    \r\n    if (success)\r\n        mealIds.map(id => dispatch(removeSelectedMealId(id)));\r\n}\r\n\r\nexport const {addSelectedMealId, removeSelectedMealId } = homeSlice.actions;\r\n\r\nexport const homeSelector = (state: RootState) => state.home;\r\n\r\nconst homeReducer = homeSlice.reducer;\r\nexport default homeReducer;","import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport mealFormReducer from \"../features/mealForm/mealSlice\";\r\nimport navMenuReducer from \"../features/navMenu/navMenuSlice\";\r\nimport homeReducer from \"../features/home/homeSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    mealForm: mealFormReducer,\r\n    navMenu: navMenuReducer,\r\n    home: homeReducer\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import * as React from 'react';\r\nimport {\r\n    Drawer,\r\n    Hidden,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText, Toolbar, Typography\r\n} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {navMenuSelector, closeDrawer} from \"./navMenuSlice\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n    }),\r\n);\r\n\r\nconst drawer = (\r\n    <React.Fragment>\r\n        <List>\r\n            <ListItem component={NavLink} to=\"/food-tracker/\" key=\"Home\">\r\n                <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Accueil\" />\r\n            </ListItem>\r\n            <ListItem component={NavLink} to=\"/food-tracker/add-meal\" key=\"AddMeal\">\r\n                <ListItemIcon><AddIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Ajouter un repas\" />\r\n            </ListItem>\r\n        </List>      \r\n    </React.Fragment>\r\n);\r\n\r\nexport default function NavMenu() {\r\n    const navMenuState = useSelector(navMenuSelector);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <nav>\r\n            <Hidden smUp>\r\n                <Drawer \r\n                    variant=\"temporary\" \r\n                    anchor=\"left\" \r\n                    open={navMenuState.drawerIsOpen}\r\n                    onClick={() => dispatch(closeDrawer())}\r\n                    className={classes.drawer}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <Toolbar>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                        <Typography variant=\"h5\">\r\n                            Menu\r\n                        </Typography>\r\n                    </Toolbar>\r\n                    {drawer}\r\n                </Drawer>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n                <Drawer \r\n                    variant=\"permanent\"\r\n                    className={classes.drawer}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    {drawer}\r\n                </Drawer>\r\n            </Hidden>\r\n        </nav>\r\n    );\r\n}","import * as React from 'react';\r\nimport {AppBar, Container, Hidden, Toolbar, Typography} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {openDrawer} from \"./features/navMenu/navMenuSlice\";\r\nimport NavMenu from \"./features/navMenu/NavMenu\";\r\nimport {makeStyles, Theme, createStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        content: {\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function Layout(props: { children: React.ReactNode }) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Hidden smUp>\r\n                        <IconButton \r\n                            edge=\"start\" \r\n                            color=\"inherit\" \r\n                            aria-label=\"menu\"\r\n                            onClick={() => dispatch(openDrawer())}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                    </Hidden>\r\n                    <Typography variant=\"h6\">\r\n                        Food Tracker\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <NavMenu />\r\n            <Hidden xsDown>\r\n                <div className={classes.content}>\r\n                    <Toolbar />\r\n                    {props.children}\r\n                </div>\r\n            </Hidden>\r\n            <Hidden smUp>\r\n                <Container className={classes.content}>\r\n                    <Toolbar />\r\n                    {props.children}\r\n                </Container>\r\n            </Hidden>\r\n        </div>\r\n    );\r\n}\r\n","import MealDateTime from \"./MealDateTime\";\r\n\r\nexport default MealDateTime;","import React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\ninterface PropsType {\r\n    date: Date;\r\n}\r\n\r\nexport default function MealDateTime({ date }: PropsType) {\r\n    function formatNumber(value: number): string {\r\n        return value.toString().padStart(2, '0');\r\n    }\r\n    \r\n    const formattedDate = `${formatNumber(date.getDate())}/${formatNumber(date.getMonth())}/${formatNumber(date.getFullYear())}`;\r\n    const formattedTime = `${formatNumber(date.getHours())}:${formatNumber(date.getMinutes())}`;\r\n    return (\r\n        <Typography variant=\"body1\">{formattedDate} {formattedTime}</Typography>\r\n    );\r\n}","import {Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface PropsType {\r\n    weightValues: number[];\r\n}\r\n\r\nexport default function MealWeight({ weightValues }: PropsType) {\r\n    return (\r\n        <Typography variant=\"body1\">{weightValues.reduce((w1, w2) => w1 + w2)}g</Typography>\r\n    )\r\n}","import HungerNote from \"./HungerNote\";\r\n\r\nexport default HungerNote;","import {Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface PropsType {\r\n    note: number;\r\n}\r\n\r\nexport default function HungerNote({ note }: PropsType) {\r\n    return (\r\n        <Typography variant=\"body1\">{note}/10</Typography>\r\n    )\r\n}","import {Satiety} from \"../../../../../../model/Satiety\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface PropsType {\r\n    satiety: Satiety\r\n}\r\n\r\nexport default function SatietyLabel({ satiety }: PropsType) {\r\n    const labels: Record<Satiety, string> = {\r\n        [Satiety.ateToMuch]: \"Trop mangé\",\r\n        [Satiety.fine]: \"Bien\",\r\n        [Satiety.stillHungry]: \"Encore faim\"\r\n    }\r\n\r\n    return (\r\n        <Typography variant=\"body1\">{labels[satiety]}</Typography>\r\n    ) \r\n}","import React from \"react\";\r\nimport Meal from \"../../../../model/Meal\";\r\nimport {TableCell, TableRow} from \"@material-ui/core\";\r\nimport MealDateTime from \"./components/MealDateTime\";\r\nimport MealWeight from \"./components/MealWeight/MealWeight\";\r\nimport HungerNote from \"./components/HungerNote\";\r\nimport SatietyLabel from \"./components/SatietyLabel/Satiety\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addSelectedMealId, removeSelectedMealId} from \"../../homeSlice\";\r\n\r\ninterface PropsType {\r\n    meal: Meal;\r\n    isSelected: boolean;\r\n}\r\n\r\nexport default function MealRow({ meal, isSelected }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    \r\n    const toggleSelection = () => {\r\n        if (isSelected)\r\n            dispatch(removeSelectedMealId(Number(meal.id)));\r\n        else\r\n            dispatch(addSelectedMealId(Number(meal.id)));\r\n    }\r\n    \r\n    return (\r\n        <TableRow onClick={toggleSelection} key={meal.id} selected={isSelected}>\r\n            <TableCell>\r\n                <MealDateTime date={meal.date} />\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                <MealWeight weightValues={meal.weight} />\r\n            </TableCell>\r\n            <TableCell>\r\n                <HungerNote note={meal.hungerNote} />\r\n            </TableCell>\r\n            <TableCell>\r\n                <SatietyLabel satiety={meal.satiety} />\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}","import {Button} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteMealsAsync} from \"../../homeSlice\";\r\nimport React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    mealIds: number[]\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function DeleteMealsButton({ mealIds }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    return (\r\n        <div className={classes.buttonContainer}>\r\n            <Button \r\n                className={classes.button}\r\n                disabled={mealIds.length === 0} \r\n                variant=\"contained\" \r\n                color=\"secondary\" \r\n                onClick={() => dispatch(deleteMealsAsync(mealIds))}\r\n            >\r\n                Supprimer les éléments séléctionnés\r\n            </Button>\r\n        </div>\r\n    );\r\n}","import DeleteMealsButton from \"./DeleteMealsButton\";\r\n\r\nexport default DeleteMealsButton;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateMealDate } from \"../../mealSlice\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport {makeStyles, Theme, createStyles} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    date?: Date\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    datePicker: {\r\n        marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function MealDateField({ date }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    function useDateUpdate(date: Date | null) {\r\n        if (date !== null)\r\n            dispatch(updateMealDate(date));\r\n    }\r\n    \r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                className={classes.datePicker}\r\n                onChange={useDateUpdate}\r\n                value={date}\r\n                format=\"dd/MM/yyyy\"\r\n                label=\"Date du repas\"\r\n                invalidDateMessage=\"Format de date invalide\"\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","import MealDateField from \"./MealDateField\";\r\n\r\nexport default MealDateField","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateMealTime } from \"../../mealSlice\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker} from \"@material-ui/pickers\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    time?: Date\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    datePicker: {\r\n        marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function MealTimeField({ time }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n\r\n    function useDateUpdate(time: Date | null) {\r\n        if (time !== null)\r\n            dispatch(updateMealTime(time));\r\n    }\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardTimePicker\r\n                className={classes.datePicker}\r\n                onChange={useDateUpdate}\r\n                value={time}\r\n                format=\"HH:mm\"\r\n                label=\"Heure du repas\"\r\n                invalidDateMessage=\"Format d'heure invalide\"\r\n                ampm={false}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","import MealTimeField from \"./MealTimeField\";\r\n\r\nexport default MealTimeField","import React from \"react\";\r\nimport {Slider, Typography} from \"@material-ui/core\";\r\nimport { updateHungerNote } from \"../../mealSlice\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    hungerNote: number\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    slider: {\r\n        marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function HungerNoteSlider({ hungerNote }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    const marks = Array.from(new Array(11).keys()).map(key => ({\r\n        value: key,\r\n        label: key.toString()\r\n    }));\r\n    \r\n    const dispatchNewHungerNote = (event: any, newValue: number | number[]) => {\r\n        const valueAsNumber = newValue as number;\r\n        if (valueAsNumber != null)\r\n            dispatch(updateHungerNote(valueAsNumber));\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.slider}>\r\n            <Typography>\r\n                Evaluation de la faim\r\n            </Typography>\r\n            <Slider\r\n                aria-label=\"Evaluation de la faim\"\r\n                marks={marks}\r\n                value={hungerNote}\r\n                min={0}\r\n                max={10}\r\n                step={1}\r\n                onChangeCommitted={dispatchNewHungerNote}\r\n            />\r\n        </div>\r\n    )\r\n}","import HungerNoteSlider from \"./HungerNoteSlider\";\r\n\r\nexport default HungerNoteSlider;","import React, {ChangeEvent} from \"react\";\r\nimport {Satiety} from \"../../../../model/Satiety\";\r\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateSatiety} from \"../../mealSlice\";\r\nimport {makeStyles, Theme, createStyles} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    satiety: Satiety;\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    element: {\r\n        marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function SatietySelect({satiety}: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    const dispatchUpdateSatiety = (event: ChangeEvent<{ value: unknown }>) => {\r\n        const feeling = event.target.value as Satiety;\r\n        \r\n        if (feeling != null)\r\n            dispatch(updateSatiety(feeling))\r\n    }\r\n    \r\n    return (\r\n        <FormControl className={classes.element}>\r\n            <InputLabel id=\"satietyLabel\">Sensation après le repas</InputLabel>\r\n            <Select labelId=\"satietyLabel\" value={satiety} onChange={dispatchUpdateSatiety}>\r\n                <MenuItem value={Satiety.stillHungry} >Encore faim</MenuItem>\r\n                <MenuItem value={Satiety.fine}>Bien</MenuItem>\r\n                <MenuItem value={Satiety.ateToMuch}>Trop mangé</MenuItem>\r\n            </Select>\r\n        </FormControl>    \r\n    );\r\n}","import SatietySelect from \"./SatietySelect\";\r\n\r\nexport default SatietySelect;","export default class MealWeightValidator {\r\n    static validate(weight: number): [ boolean, string ] {\r\n        \r\n        if (weight == null) \r\n            return [ false, \"Le poids est obligatoire\" ];\r\n\r\n        if (isNaN(weight))\r\n            return [ false, \"Le poids doit être un nombre\" ];\r\n        \r\n        if (weight === 0)\r\n            return [false, \"Le poids ne doit pas être égale à 0\"]\r\n\r\n        return [ true, \"\" ];\r\n    }\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateMealWeight } from \"../../../mealSlice\";\r\nimport {InputAdornment, TextField} from \"@material-ui/core\";\r\nimport MealWeightValidator from \"./MealWeightValidator\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    weight: number;\r\n    index: number;\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    inputField: {\r\n        marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function MealWeightField({ weight, index }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [localWeight, setLocalWeight] = useState(\"\");\r\n    const classes = useStyle();\r\n\r\n    function updateLocalWeight(weight: number) {\r\n        if (weight !== 0)\r\n            setLocalWeight(weight.toString());\r\n        else\r\n            setLocalWeight(\"\");\r\n    }\r\n    \r\n    useEffect(() => {\r\n        updateLocalWeight(weight)\r\n    }, [weight]);\r\n    \r\n    const updateWeight = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const weight = Number(event.target.value);\r\n        const [ isValid, errorMessage ] = MealWeightValidator.validate(weight);\r\n        \r\n        setError(!isValid);\r\n        setErrorMessage(errorMessage);\r\n        \r\n        dispatch(updateMealWeight({newValue: weight, index: index}));\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            className={classes.inputField}\r\n            label=\"Poids\"\r\n            type=\"number\"\r\n            value={localWeight}\r\n            error={error}\r\n            helperText={errorMessage}\r\n            onChange={updateWeight}\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">g</InputAdornment>,\r\n            }}\r\n            autoFocus={true}\r\n        />\r\n    );\r\n}\r\n","import MealWeightField from \"./MealWeightField\";\r\n\r\nexport default MealWeightField;","import React from \"react\";\r\nimport MealWeightField from \"./MealWeightField\";\r\nimport {addMealWeight, removeMealWeight} from \"../../mealSlice\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    weightValues: number[];\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    buttonSection: {\r\n        marginBottom: theme.spacing(3),\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\"\r\n    }\r\n}));\r\n\r\nexport default function MealWeightComponent({ weightValues }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    const addWeightValue = () => {\r\n        dispatch(addMealWeight())\r\n    }\r\n    \r\n    const removeWeightValue = () => {\r\n        dispatch(removeMealWeight())\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            {weightValues.map((weight, index) => \r\n                <MealWeightField key={index} weight={weight} index={index} />\r\n            )}\r\n            <div className={classes.buttonSection}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    children={<RemoveIcon />}\r\n                    onClick={removeWeightValue}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    children={<AddIcon />}\r\n                    onClick={addWeightValue}\r\n                />    \r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import MealWeightComponent from \"./MealWeightComponent\";\r\n\r\nexport default MealWeightComponent;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {saveMealAsync} from \"../../mealSlice\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ninterface PropsType {\r\n    disabled: boolean;\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    button: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function SaveMealButton({ disabled }: PropsType) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyle();\r\n    \r\n    const saveMeal = () => {\r\n        dispatch(saveMealAsync());\r\n    }\r\n    \r\n    return (\r\n      <Button disabled={disabled} variant=\"contained\" className={classes.button} color=\"primary\" onClick={saveMeal} component={NavLink} to=\"/food-tracker/\">\r\n          Enregistrer\r\n      </Button>  \r\n    );\r\n}","import SaveMealButton from \"./SaveMealButton\";\n\nexport default SaveMealButton;","import {Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface PropsType {\r\n    weightValues: number[];\r\n}\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n    totalWeight: {\r\n        marginBottom: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default function TotalWeight({ weightValues }: PropsType) {\r\n    const totalWeight = weightValues.reduce((w1, w2) => w1 + w2);\r\n    const classes = useStyle();\r\n    \r\n    return (\r\n        <Typography className={classes.totalWeight} variant=\"h6\">Poids total : {totalWeight}</Typography>\r\n    )\r\n}","import TotalWeight from \"./TotalWeight\";\r\n\r\nexport default TotalWeight;","import {MealFormState} from \"./mealSlice\";\r\n\r\nexport default class MealFormValidator {\r\n    public static validate(mealState: MealFormState): [boolean, string] {\r\n        const mealTotalWeight = mealState.weight.reduce((w1, w2) => w1 + w2);\r\n        \r\n        if (mealTotalWeight === 0)\r\n            return [false, \"Le poids total doit être différent de 0\"]\r\n        \r\n        return [true, \"\"];\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { addMealFormSelector } from \"./mealSlice\";\r\nimport MealDateField from \"./components/MealDateField\";\r\nimport MealTimeField from \"./components/MealTimeField\";\r\nimport HungerNoteSlider from \"./components/HungerNoteSlider\";\r\nimport SatietySelect from \"./components/SatietySelect\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport MealWeightComponent from \"./components/MealWeightComponent\";\r\nimport SaveMealButton from \"./components/SaveMealButton\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport TotalWeight from \"./components/TotalWeight\";\r\nimport MealFormValidator from \"./MealFormValidator\";\r\n\r\nconst useStyle = makeStyles((theme: Theme) => createStyles({\r\n  container: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nexport default function MealForm() {\r\n  const state = useSelector(addMealFormSelector);\r\n  const [mealIsValid, setMealIsValid] = useState(false);\r\n  const classes = useStyle();\r\n  \r\n  useEffect(() => {\r\n    const [isMealValid] = MealFormValidator.validate(state);\r\n    setMealIsValid(isMealValid)\r\n  }, [state])\r\n  \r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl>\r\n        <TotalWeight weightValues={state.weight} />\r\n        <MealWeightComponent weightValues={state.weight} />\r\n        <MealDateField date={new Date(state.date)} />\r\n        <MealTimeField time={new Date(state.date)} />\r\n        <HungerNoteSlider hungerNote={state.hungerNote} />\r\n        <SatietySelect satiety={state.satiety} />\r\n        <SaveMealButton disabled={!mealIsValid} />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport Layout from \"./Layout\";\r\nimport Home from \"./features/home/Home\";\r\nimport MealForm from \"./features/mealForm/MealForm\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Route path=\"/food-tracker/\" exact component={Home} />\r\n                <Route path=\"/food-tracker/add-meal\" component={MealForm} />\r\n                <Route path=\"/\" exact>\r\n                    <Redirect to=\"/food-tracker/\" />\r\n                </Route>\r\n                <Route path=\"/add-meal\" exact>\r\n                    <Redirect to=\"/food-tracker/add-meal\" />\r\n                </Route>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","import React from \"react\";\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\r\nimport MealRow from \"./components/MealRow/MealRow\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {homeSelector, loadLastMeals} from \"./homeSlice\";\r\nimport DeleteMealsButton from \"./components/DeleteButton\";\r\nimport Meal from \"../../model/Meal\";\r\n\r\nexport default function Home() {\r\n    const dispatch = useDispatch();\r\n    dispatch(loadLastMeals(10));\r\n    const homeState = useSelector(homeSelector);\r\n    \r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\">\r\n                Derniers repas\r\n            </Typography>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Date et heure</TableCell>\r\n                            <TableCell>Poids</TableCell>\r\n                            <TableCell>Faim</TableCell>\r\n                            <TableCell>Satiété</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {homeState.lastMeals.map(serializedMeal => {\r\n                            const meal = Meal.parse(serializedMeal);\r\n                            return (<MealRow key={meal.id} meal={meal} isSelected={homeState.selectedMealIds.includes(Number(meal.id))}/>)\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <DeleteMealsButton mealIds={homeState.selectedMealIds} />\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}